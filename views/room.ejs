<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script>
        // 记录由server.js传入的roodId并称为ROOM_ID
        const ROOM_ID = "<%= roomId %>"
        const USER_NAME = "<%= userName %>"
    </script>
    <link rel="stylesheet" href="intro.css">
    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="/socket.io/socket.io.js" defer></script>
    <script src="room.js" defer></script>
    <script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
    <title>房间页</title>
</head>
    <link rel="stylesheet" href="room.css">

<body>
    <!-- 按钮控制区 -->
    <div class="btn-line">
        <button type="button" class="btn-func" id="soundbtn">Mute All Sound</button>
        <button type="button" class="btn-func" id="micbtn">Mic</button>
        <button type="button" class="btn-func" id="screenbtn">Share Screen</button>
        <button type="button" class="btn-func" id="sendbtn">Send</button>
        <button type="button" class="btn-func" id="filebtn">Send</button>
        <button type="button" class="btn-func" id="clearbtn">Clear</button>
    </div>
    <!-- 视频(音频)块 -->
    <div id="video-grid" autoplay playsinline></div>
    <!-- 在线列表 -->
    <!-- 两种实现方式，一种是保留vg，将其不可见，
        然后单独写用户列表，发言头像绿等features。
        另一种是直接二合一 -->
    <div id="name-grid">
        <!-- 由li标签组成 -->
    </div>
    <!-- 屏幕共享 -->
    <div id="screen-grid">
        <!-- 由video组成 -->
    </div>
    <!-- 文字聊天/信息推送 -->
    <textarea class="chat" id="chat-out" readonly="readonly">欢迎使用miscord
Hi, <%= userName %>, 这里是<%= roomId %>频道 &#13;&#10;</textarea>
    <!-- 输入栏 -->
    <textarea class="chat" id="chat-in" placeholder="发个友善的消息见证当下!" cols="20" rows="5"></textarea>

    <!-- 用户列表 -->
</body>

</html>